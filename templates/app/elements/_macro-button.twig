{% macro render_button_link(options = {}) %}
    {% import "@Elements/_macro-icon.twig" as icons %}

    {% set options = {
        text: 'Button Text',
        style: 'solid',
        size: 'default',
        icon: null,
        link: null,
    } | merge(options) %}

    {% set type_class = {
        solid: 'border-transparent bg-blue-600 text-white hover:bg-blue-700 disabled:opacity-50 disabled:pointer-events-none',
        outline: 'border-gray-200 text-gray-500 hover:border-blue-600 hover:text-blue-600 disabled:opacity-50 disabled:pointer-events-none',
        ghost: 'border-transparent text-blue-600 hover:bg-blue-100 hover:text-blue-800 disabled:opacity-50 disabled:pointer-events-none',
        soft: 'border-transparent bg-blue-100 text-blue-800 hover:bg-blue-200 disabled:opacity-50 disabled:pointer-events-none',
        white: 'border-gray-200 bg-white text-gray-800 shadow-sm hover:bg-gray-50 disabled:opacity-50 disabled:pointer-events-none',
        link: 'border-transparent text-blue-600 hover:text-blue-800 disabled:opacity-50 disabled:pointer-events-none',
    }[options.style] %}

    {% set size_class = {
        small: 'py-2 px-3 text-sm',
        default: 'py-2.5 px-5 text-sm sm:fluid-text-xs',
        large: 'p-4 sm:px-5 s:py-3 fluid-text-sm lg:fluid-text-base',
    }[options.size] %}

    {% set button_classes = [
        type_class,
        size_class,
        'inline-flex items-center gap-x-2 justify-center border rounded leading-5 font-semibold tracking-widest transition-all duration-200 ease-in-out cursor-pointer group'
    ]|join(' ') %}

    {% set button_text %}
        <span class="inline-flex">{{ options.text }}</span>
        {# Include an optional SVG icon #}
        {% if options.icon is not null %}
            <span class="relative inline-flex items-center justify-center w-5 h-5 bg-current rounded-full">
                {{ icons.icon(options.icon, 'w-4 h-4') }}
            </span>
        {% endif %}
    {% endset %}

    {% if options.link is not empty %}
        {# Generate button HTML #}
        <a href="{{ options.link }}" class="{{ button_classes }}">
            {{ button_text }}
        </a>
    {% else %}
        <button class="{{ button_classes }}">
            {{ button_text }}
        </button>
    {% endif %}
    

    
{% endmacro %}

{% macro render_button_swiper(options=[]) %}
    {% import "/templates/components/ui/_macro-icon.twig" as icons %}

    {% set options = {
        icon: icon,
        text: text,
        class: class,
        type: type,
        size: size,
    }  | merge(options)  %}
    
    <div class="transition duration-150 ease-linear border border-transparent rounded cursor-pointer flex items-center justify-center {{ options.size }} swiper-button__{{ options.type }}">
        {{ icons.icon('arrow-right',  options.icon ) }}
        <span class="sr-only">{{ options.text }}</span>
    </div>

{% endmacro %}




